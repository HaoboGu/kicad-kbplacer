version: 2.1

jobs:
  test:
    docker:
      - image: admwscki/kicad-kbplacer-primary:6.0-lunar
    steps:
      - checkout
      - run:
          name: Prepare tests
          command: |
            pip3 install --no-cache-dir -r tests/dev-requirements.txt
            mkdir -p /root/.local/share/kicad/6.0/3rdparty/plugins
            cp -r kbplacer/ /root/.local/share/kicad/6.0/3rdparty/plugins/com_github_adamws_kicad-kbplacer
      - run:
          name: Run tests
          command: |
            pytest --junitxml=test-results/pytest/results.xml
          working_directory: tests
      - store_artifacts:
          path: tests/report.html
      - store_test_results:
          path: tests/test-results
  create-release:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      - run:
          name: Create zip package
          command: |
            ./release/release.sh
      - store_artifacts:
          path: release/kicad-kbplacer.zip
  deploy-image:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - run:
          name: Setup environment variables
          command: |
            echo 'export TAG="0.2.${CIRCLE_SHA1}"' >> "$BASH_ENV"
            echo 'export IMAGE_NAME="kicad-kbplacer"' >> "$BASH_ENV"
      - run:
          name: Build and test docker image
          command: |
            docker build -t admwscki/$IMAGE_NAME:$TAG -f docker/Dockerfile .
            docker run --rm -v $(pwd)/tests:/kicad/tests -v $(pwd)/examples:/kicad/examples \
              -w /kicad/tests admwscki/$IMAGE_NAME:$TAG \
              /bin/bash -c "pip3 install -r dev-requirements.txt && /kicad/.local/bin/pytest -c /dev/null"
      - run:
          name: Push docker image
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]
            then
              docker tag admwscki/$IMAGE_NAME:$TAG admwscki/$IMAGE_NAME:latest
              echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_LOGIN --password-stdin
              docker push admwscki/$IMAGE_NAME:$TAG
              docker push admwscki/$IMAGE_NAME:latest
            fi
workflows:
  main:
    jobs:
      - test
      - create-release:
          requires:
            - test
      - deploy-image:
          requires:
            - create-release
