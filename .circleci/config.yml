version: 2.1

jobs:
  test-ubuntu-lunar-kicad6:
    docker:
      - image: admwscki/kicad-kbplacer-primary:6.0.11-lunar
    steps: &in-docker-test-steps
      - checkout
      - run:
          name: Prepare tests
          command: |
            pip3 install --no-cache-dir -r dev-requirements.txt
      - run:
          name: Run tests
          command: |
            pytest --junitxml=test-results/pytest/results.xml
          working_directory: tests
      - store_artifacts:
          path: tests/report.html
      - store_test_results:
          path: tests/test-results
  test-ubuntu-focal-kicad6:
    docker:
      - image: admwscki/kicad-kbplacer-primary:6.0.11-focal
    steps: *in-docker-test-steps
  test-ubuntu-lunar-kicad7:
    docker:
      - image: admwscki/kicad-kbplacer-primary:7.0.0-lunar
    steps: *in-docker-test-steps
  test-windows-kicad6:
    machine:
      image: windows-server-2022-gui:current
      shell: powershell.exe -ExecutionPolicy Bypass
    resource_class: windows.medium
    steps:
      - checkout
      - restore_cache:
          key: scoop-{{ .Branch }}-{{ checksum "dev-requirements.txt" }}
      - run:
          name: Install scoop and KiCad
          command: |
            irm get.scoop.sh -outfile "install.ps1"
            .\install.ps1 -RunAsAdmin -ScoopDir "C:\scoop"
            scoop bucket add extras
            scoop install kicad@6.0.11
            scoop cache rm --all
      - run:
          name: Install dependencies
          command: |
            .\.circleci\scripts\use-kicad-python.ps1
            python -m pip install --upgrade pip
            pip install --no-cache-dir -r dev-requirements.txt
      - save_cache:
          key: scoop-{{ .Branch }}-{{ checksum "dev-requirements.txt" }}
          paths:
            - C:\scoop
      - run:
          name: Run tests
          command: |
            ..\.circleci\scripts\use-kicad-python.ps1
            pytest --junitxml=test-results/pytest/results.xml
          working_directory: tests
      - store_artifacts:
          path: tests/report.html
      - store_test_results:
          path: tests/test-results
  create-release:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      - run:
          name: Create zip package
          command: |
            ./release/release.sh
      - store_artifacts:
          path: release/kicad-kbplacer.zip
  deploy-image:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - run:
          name: Setup environment variables
          command: |
            echo 'export TAG="0.4.${CIRCLE_SHA1}"' >> "$BASH_ENV"
            echo 'export IMAGE_NAME="kicad-kbplacer"' >> "$BASH_ENV"
      - run:
          name: Build and test docker image
          command: |
            docker build -t admwscki/$IMAGE_NAME:$TAG -f docker/Dockerfile .
            docker run --rm -v $(pwd)/tests:/kicad/tests -v $(pwd)/examples:/kicad/examples \
              -v $(pwd)/dev-requirements.txt:/kicad/tests/dev-requirements.txt \
              -w /kicad/tests admwscki/$IMAGE_NAME:$TAG \
              /bin/bash -c \
              "pip3 install -r dev-requirements.txt && /kicad/.local/bin/pytest -c /dev/null --test-plugin-installation -k test_with_examples"
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Push docker image
                command: |
                  docker tag admwscki/$IMAGE_NAME:$TAG admwscki/$IMAGE_NAME:latest
                  echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_LOGIN --password-stdin
                  docker push admwscki/$IMAGE_NAME:$TAG
                  docker push admwscki/$IMAGE_NAME:latest
  build-nightly-image:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - run:
          name: Build and push KiCad nightly docker image
          command: |
            docker build -t admwscki/kicad-kbplacer-primary:nightly-lunar -f nightly.Dockerfile .
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_LOGIN --password-stdin
            docker push admwscki/kicad-kbplacer-primary:nightly-lunar
          working_directory: .circleci/images/lunar
  test-linux-kicad-nightly:
    docker:
      - image: admwscki/kicad-kbplacer-primary:nightly-lunar
    steps: *in-docker-test-steps

workflows:
  main:
    jobs:
      - test-ubuntu-lunar-kicad6
      - test-ubuntu-focal-kicad6
      - test-ubuntu-lunar-kicad7
      - test-windows-kicad6
      - create-release:
          requires:
            - test-ubuntu-lunar-kicad6
            - test-ubuntu-focal-kicad6
            - test-ubuntu-lunar-kicad7
            - test-windows-kicad6
      - deploy-image:
          requires:
            - create-release
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - kicad-nightly
    jobs:
      - build-nightly-image
      - test-linux-kicad-nightly:
          requires:
            - build-nightly-image
